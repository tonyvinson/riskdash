terraform {
  required_version = ">= 1.4"
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = ">= 4.0.0"
    }
  }
  
  backend "s3" {
    bucket         = "riskuity-ksi-tfstate"
    key            = "ksi-validator/terraform.tfstate"
    region         = "us-gov-west-1"
    encrypt        = true
    use_lockfile   = true
  }
}

provider "aws" {
  region = var.aws_region
  
  default_tags {
    tags = {
      Project     = "KSI-Validator"
      Environment = var.environment
      Company     = "Riskuity"
      Purpose     = "FedRAMP-20X-Compliance"
    }
  }
}

# Data sources
data "aws_caller_identity" "current" {}
data "aws_region" "current" {}

# DynamoDB Tables Module
module "dynamodb" {
  source = "./modules/dynamodb"
  
  environment = var.environment
  project_name = var.project_name
}

# Lambda Functions Module  
module "lambda" {
  source = "./modules/lambda"
  
  environment = var.environment
  project_name = var.project_name
  
  ksi_definitions_table = module.dynamodb.ksi_definitions_table_name
  ksi_definitions_table_arn = module.dynamodb.ksi_definitions_table_arn
  tenant_ksi_configurations_table = module.dynamodb.tenant_ksi_configurations_table_name
  tenant_ksi_configurations_table_arn = module.dynamodb.tenant_ksi_configurations_table_arn
  ksi_execution_history_table = module.dynamodb.ksi_execution_history_table_name
  ksi_execution_history_table_arn = module.dynamodb.ksi_execution_history_table_arn
  
  depends_on = [module.dynamodb]
}

# EventBridge Scheduling Module
module "eventbridge" {
  source = "./modules/eventbridge"
  
  environment = var.environment
  project_name = var.project_name
  orchestrator_lambda_arn = module.lambda.orchestrator_lambda_arn
  
  depends_on = [module.lambda]
}
# API Gateway Module
module "api_gateway" {
  source = "./modules/api_gateway"
  
  environment  = var.environment
  aws_region   = var.aws_region
  project_name = var.project_name
#  tenant_onboarding_lambda_function_name = module.tenant_management.tenant_onboarding_api_function_name
#  tenant_onboarding_lambda_invoke_arn    = module.tenant_management.tenant_onboarding_api_function_arn
  
  # Lambda integrations
  orchestrator_lambda_arn = module.lambda.orchestrator_lambda_arn
  
  # DynamoDB table references
  ksi_definitions_table                   = module.dynamodb.ksi_definitions_table_name
  ksi_definitions_table_arn              = module.dynamodb.ksi_definitions_table_arn
  tenant_ksi_configurations_table        = module.dynamodb.tenant_ksi_configurations_table_name
  tenant_ksi_configurations_table_arn    = module.dynamodb.tenant_ksi_configurations_table_arn
  ksi_execution_history_table            = module.dynamodb.ksi_execution_history_table_name
  ksi_execution_history_table_arn        = module.dynamodb.ksi_execution_history_table_arn
  
  # API configuration (using values from your terraform.tfvars)
  api_cors_allow_origin       = var.api_cors_allow_origin
  api_throttling_rate_limit   = var.api_throttling_rate_limit
  api_throttling_burst_limit  = var.api_throttling_burst_limit
  
    # Tenant management (temporarily disabled)
  tenant_onboarding_lambda_function_name = module.tenant_management.tenant_onboarding_api_function_name
  tenant_onboarding_lambda_invoke_arn    = null
  
  depends_on = [module.lambda, module.dynamodb]
}

# =============================================================================
# ADD THIS TO THE END OF YOUR terraform/main.tf FILE:
# =============================================================================

# Tenant Management Module - NEW SaaS functionality
module "tenant_management" {
  source = "./modules/tenant_management"
  
  environment  = var.environment
  project_name = var.project_name
  
  # References to existing DynamoDB tables
  tenant_ksi_configurations_table_name = module.dynamodb.tenant_ksi_configurations_table_name
  tenant_ksi_configurations_table_arn  = module.dynamodb.tenant_ksi_configurations_table_arn
  ksi_execution_history_table_name     = module.dynamodb.ksi_execution_history_table_name
  ksi_execution_history_table_arn      = module.dynamodb.ksi_execution_history_table_arn
  
  depends_on = [module.dynamodb, module.lambda]
}

# Tenant Management Module
module "tenant_management" {
  source = "./modules/tenant_management"
  
  environment  = var.environment
  project_name = var.project_name
  
  # DynamoDB table references
  ksi_definitions_table = module.dynamodb.ksi_definitions_table_name
  tenant_ksi_configurations_table = module.dynamodb.tenant_ksi_configurations_table_name
  ksi_execution_history_table = module.dynamodb.ksi_execution_history_table_name
  
  depends_on = [module.dynamodb]
}
